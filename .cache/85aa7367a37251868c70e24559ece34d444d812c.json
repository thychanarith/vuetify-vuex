{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/narith/Desktop/vuetify-vuex/client/App.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/narith/Desktop/vuetify-vuex/client/App.vue","filename":"/home/narith/Desktop/vuetify-vuex/client/App.vue","passPerPreset":false,"envName":"development","cwd":"/home/narith/Desktop/vuetify-vuex","root":"/home/narith/Desktop/vuetify-vuex","generatorOpts":{"filename":"/home/narith/Desktop/vuetify-vuex/client/App.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/narith/Desktop/vuetify-vuex/client/App.vue"}},"code":"var findCustomer;\nmodule.link(\"../both/Method/customer-methods.js\", {\n  findCustomer: function (v) {\n    findCustomer = v;\n  }\n}, 0);\nmodule.exportDefault({\n  name: 'App',\n  data: function () {\n    return {\n      drawer: null,\n      visible: true,\n      links: [{\n        to: '/home',\n        icon: 'home',\n        text: 'Home'\n      }, {\n        to: '/customerForm',\n        icon: 'receipt',\n        text: 'Customer Form'\n      }, {\n        to: '/customer',\n        icon: 'book',\n        text: 'Customer'\n      }, {\n        to: '/longinMain',\n        icon: 'person',\n        text: 'Login Page'\n      }],\n      props: {\n        source: String\n      }\n    };\n  },\n  computed: {\n    itemsBranch: function () {\n      return this.$store.state.branches;\n    },\n    curenntBranch: function () {\n      return this.$store.state.curenntBranch;\n    },\n    crumbs: function () {\n      var pathArray = this.$route.path.split(\"/\");\n      pathArray.shift();\n      var breadcrumbs = pathArray.reduce(function (breadcrumbArray, path, idx) {\n        breadcrumbArray.push({\n          path: path,\n          to: breadcrumbArray[idx - 1] ? \"/\" + breadcrumbArray[idx - 1].path + \"/\" + path : \"/\" + path,\n          text: moonthis.$route.matched[idx].meta.breadCrumb || path\n        });\n        return breadcrumbArray;\n      }, []);\n      return breadcrumbs;\n    }\n  },\n  mounted: function () {\n    var _this = this;\n\n    this.$store.dispatch('setCurrentBranch', this.itemsBranch[0].branch);\n    findCustomer.callPromise().then(function (result) {\n      _this.$store.dispatch('setCustomer', result);\n    });\n    this.onActive();\n  },\n  methods: {\n    clickChange: function (val) {\n      this.$store.dispatch('setCurrentBranch', val);\n      this.$store.getters.filterBranch(val);\n    },\n    onActive: function () {\n      this.visible = this.$route.meta.visible;\n      console.log(this.$route.meta.visible);\n    }\n  }\n});","map":{"version":3,"sources":["/home/narith/Desktop/vuetify-vuex/client/App.vue"],"names":["findCustomer","module","link","v","exportDefault","name","data","drawer","visible","links","to","icon","text","props","source","String","computed","itemsBranch","$store","state","branches","curenntBranch","crumbs","pathArray","$route","path","split","shift","breadcrumbs","reduce","breadcrumbArray","idx","push","moonthis","matched","meta","breadCrumb","mounted","dispatch","branch","callPromise","then","result","onActive","methods","clickChange","val","getters","filterBranch","console","log"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    findCustomer\n} from '../both/Method/customer-methods.js'\nexport default {\n    name: 'App',\n    data: () => ({\n        drawer: null,\n        visible: true,\n        links: [{\n                to: '/home',\n                icon: 'home',\n                text: 'Home',\n            },\n            {\n                to: '/customerForm',\n                icon: 'receipt',\n                text: 'Customer Form'\n            },\n            {\n                to: '/customer',\n                icon: 'book',\n                text: 'Customer'\n            },\n            {\n                to: '/longinMain',\n                icon: 'person',\n                text: 'Login Page'\n            }\n        ],\n\n        props: {\n            source: String\n        },\n    }),\n    computed: {\n        itemsBranch() {\n            return this.$store.state.branches\n        },\n\n        curenntBranch() {\n            return this.$store.state.curenntBranch\n        },\n\n        crumbs() {\n            let pathArray = this.$route.path.split(\"/\")\n            pathArray.shift()\n            let breadcrumbs = pathArray.reduce((breadcrumbArray, path, idx) => {\n                breadcrumbArray.push({\n                    path: path,\n                    to: breadcrumbArray[idx - 1] ?\n                        \"/\" + breadcrumbArray[idx - 1].path + \"/\" + path :\n                        \"/\" + path,\n                    text: moonthis.$route.matched[idx].meta.breadCrumb || path,\n                });\n                return breadcrumbArray;\n            }, [])\n            return breadcrumbs;\n        }\n    },\n\n    mounted() {\n        this.$store.dispatch('setCurrentBranch', this.itemsBranch[0].branch)\n        findCustomer.callPromise().then(result => {\n            this.$store.dispatch('setCustomer', result)\n        })\n        this.onActive()\n\n    },\n\n    methods: {\n        clickChange(val) {\n            this.$store.dispatch('setCurrentBranch', val)\n            this.$store.getters.filterBranch(val)\n        },\n        onActive() {\n            this.visible = this.$route.meta.visible\n            console.log(this.$route.meta.visible)\n        }\n    }\n}\n"]},"sourceType":"script","hash":"85aa7367a37251868c70e24559ece34d444d812c"}
